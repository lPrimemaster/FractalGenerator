<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6D1D2E52-2E1F-3AE1-BD0E-D9A338F0BAB0}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="H:\Data\C++\CShader\lib\glfw3\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule H:/Data/C++/CShader/lib/glfw3/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
H:\Cmake\bin\cmake.exe -SH:/Data/C++/CShader -BH:/Data/C++/CShader --check-stamp-file H:/Data/C++/CShader/lib/glfw3/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">H:\Cmake\share\cmake-3.16\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;H:\Cmake\share\cmake-3.16\Modules\CMakeDependentOption.cmake;H:\Cmake\share\cmake-3.16\Modules\CMakePackageConfigHelpers.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckCSourceCompiles.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.c.in;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckLibraryExists.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageHandleStandardArgs.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageMessage.cmake;H:\Cmake\share\cmake-3.16\Modules\FindThreads.cmake;H:\Cmake\share\cmake-3.16\Modules\GNUInstallDirs.cmake;H:\Cmake\share\cmake-3.16\Modules\WriteBasicConfigVersionFile.cmake;H:\Data\C++\CShader\lib\glfw3\cmake_uninstall.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3.pc.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3Config.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">H:\Data\C++\CShader\lib\glfw3\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule H:/Data/C++/CShader/lib/glfw3/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
H:\Cmake\bin\cmake.exe -SH:/Data/C++/CShader -BH:/Data/C++/CShader --check-stamp-file H:/Data/C++/CShader/lib/glfw3/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">H:\Cmake\share\cmake-3.16\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;H:\Cmake\share\cmake-3.16\Modules\CMakeDependentOption.cmake;H:\Cmake\share\cmake-3.16\Modules\CMakePackageConfigHelpers.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckCSourceCompiles.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.c.in;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckLibraryExists.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageHandleStandardArgs.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageMessage.cmake;H:\Cmake\share\cmake-3.16\Modules\FindThreads.cmake;H:\Cmake\share\cmake-3.16\Modules\GNUInstallDirs.cmake;H:\Cmake\share\cmake-3.16\Modules\WriteBasicConfigVersionFile.cmake;H:\Data\C++\CShader\lib\glfw3\cmake_uninstall.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3.pc.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3Config.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">H:\Data\C++\CShader\lib\glfw3\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule H:/Data/C++/CShader/lib/glfw3/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
H:\Cmake\bin\cmake.exe -SH:/Data/C++/CShader -BH:/Data/C++/CShader --check-stamp-file H:/Data/C++/CShader/lib/glfw3/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">H:\Cmake\share\cmake-3.16\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;H:\Cmake\share\cmake-3.16\Modules\CMakeDependentOption.cmake;H:\Cmake\share\cmake-3.16\Modules\CMakePackageConfigHelpers.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckCSourceCompiles.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.c.in;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckLibraryExists.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageHandleStandardArgs.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageMessage.cmake;H:\Cmake\share\cmake-3.16\Modules\FindThreads.cmake;H:\Cmake\share\cmake-3.16\Modules\GNUInstallDirs.cmake;H:\Cmake\share\cmake-3.16\Modules\WriteBasicConfigVersionFile.cmake;H:\Data\C++\CShader\lib\glfw3\cmake_uninstall.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3.pc.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3Config.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">H:\Data\C++\CShader\lib\glfw3\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule H:/Data/C++/CShader/lib/glfw3/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
H:\Cmake\bin\cmake.exe -SH:/Data/C++/CShader -BH:/Data/C++/CShader --check-stamp-file H:/Data/C++/CShader/lib/glfw3/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">H:\Cmake\share\cmake-3.16\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;H:\Cmake\share\cmake-3.16\Modules\CMakeDependentOption.cmake;H:\Cmake\share\cmake-3.16\Modules\CMakePackageConfigHelpers.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckCSourceCompiles.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.c.in;H:\Cmake\share\cmake-3.16\Modules\CheckIncludeFile.cmake;H:\Cmake\share\cmake-3.16\Modules\CheckLibraryExists.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageHandleStandardArgs.cmake;H:\Cmake\share\cmake-3.16\Modules\FindPackageMessage.cmake;H:\Cmake\share\cmake-3.16\Modules\FindThreads.cmake;H:\Cmake\share\cmake-3.16\Modules\GNUInstallDirs.cmake;H:\Cmake\share\cmake-3.16\Modules\WriteBasicConfigVersionFile.cmake;H:\Data\C++\CShader\lib\glfw3\cmake_uninstall.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3.pc.in;H:\Data\C++\CShader\lib\glfw3\src\glfw3Config.cmake.in;H:\Data\C++\CShader\lib\glfw3\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">H:\Data\C++\CShader\lib\glfw3\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="H:\Data\C++\CShader\ZERO_CHECK.vcxproj">
      <Project>{7AD642A8-EB2F-33E1-A16F-66B3384DFAB0}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="H:\Data\C++\CShader\lib\glfw3\src\glfw.vcxproj">
      <Project>{EA6F04D8-DC10-3B14-9CE8-C160C75D9F22}</Project>
      <Name>glfw</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>